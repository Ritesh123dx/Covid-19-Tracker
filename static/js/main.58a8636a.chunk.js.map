{"version":3,"sources":["InfoBox.js","utils.js","Map.js","Table.js","LineGraph.js","App.js","reportWebVitals.js","index.js"],"names":["boxStyle","InfoBox","title","cases","total","className","style","numeral","format","casesTypeColors","hex","multiplier","recovered","deaths","showDataOnMap","data","casesType","map","country","Circle","center","countryInfo","lat","long","color","fillColor","fillOpacity","radius","Math","sqrt","Popup","src","flag","width","height","Map","countries","zoom","MyComponent","useMap","setView","console","log","TileLayer","attribution","url","Table","overflow","index","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","values","LineGraph","useState","setData","useEffect","axios","get","then","res","chartData","lastDataPoint","date","newDataPoint","x","y","push","buildChardData","length","datasets","backgroundColor","borderColor","App","selectedCountry","setSelectedCountry","setCountries","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","item","name","iso3","sortedCountriesByCases","sortedData","sort","a","b","sortData","catch","error","alert","message","onCountryChange","event","class","data-toggle","aria-haspopup","aria-expanded","maxHeight","overflowY","onClick","e","todayCases","todayRecovered","todayDeaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58a8636a.chunk.js","sourcesContent":["import React from 'react'\r\nimport numeral from 'numeral';\r\n\r\n\r\nconst boxStyle = {\r\n    \"Coronavirus Cases\" : {\r\n        \"border-top\" : '15px solid rgb(255 149 0)',\r\n    },\r\n    \"Recovered\" : {\r\n        \"border-top\" : '15px solid rgb(6 189 91)'\r\n    },\r\n    \"Deaths\" : {\r\n        \"border-top\" : '15px solid rgb(251 25 25)'\r\n    },\r\n    \"text-Coronavirus Cases\" : {\r\n        \"color\" : \"rgb(255 149 0)\"\r\n    },\r\n    \"text-Recovered\" : {\r\n        \"color\" : \"rgb(6 189 91)\"\r\n    },\r\n    \"text-Deaths\" : {\r\n        \"color\" : \"rgb(251 25 25)\"\r\n    }\r\n    \r\n}\r\n\r\nfunction InfoBox({ title, cases, total }) {\r\n    return (\r\n        \r\n        <div className=\"card shadow rounded mt-3\" style={boxStyle[title]}>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"text-secondary\">{title}</h5>\r\n                <h4 style={boxStyle[`text-${title}`]} >+{numeral(cases).format(\"0,0\")}</h4>\r\n                <h5 className=\"\">Total : {numeral(total).format(\"0,0\")}</h5>\r\n\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React from 'react';\r\nimport numeral from 'numeral';\r\nimport { Circle, Popup} from 'react-leaflet';\r\n\r\nexport const sortData = (data) => {\r\n    const sortedData = [...data];\r\n\r\n    sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\r\n    \r\n    return sortedData;\r\n}\r\n\r\n\r\n\r\n//Show circle on map\r\nconst casesTypeColors = {\r\n    cases: {\r\n      hex: \"#CC1034\",\r\n    //   rgb: \"rgb(204, 16, 52)\",\r\n    //   half_op: \"rgba(204, 16, 52, 0.5)\",\r\n      multiplier: 300,\r\n    },\r\n    recovered: {\r\n      hex: \"#7dd71d\",\r\n    //   rgb: \"rgb(125, 215, 29)\",\r\n    //   half_op: \"rgba(125, 215, 29, 0.5)\",\r\n      multiplier: 300,\r\n    },\r\n    deaths: {\r\n      hex: \"#fb4443\",\r\n    //   rgb: \"rgb(251, 68, 67)\",\r\n    //   half_op: \"rgba(251, 68, 67, 0.5)\",\r\n      multiplier: 500,\r\n    },\r\n  };\r\n\r\n\r\nexport const showDataOnMap = (data, casesType='cases') => (\r\n    data.map(country=> (\r\n        \r\n        <Circle\r\n        center={[country.countryInfo.lat, country.countryInfo.long]}\r\n        color={casesTypeColors[casesType].hex}\r\n        fillColor={casesTypeColors[casesType].hex}\r\n        fillOpacity={0.4}\r\n        radius={\r\n          Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n        }\r\n    \r\n        >\r\n    <Popup>\r\n        <div className=\"info-container\">\r\n       \r\n         <div>\r\n             <img src={country.countryInfo.flag} style={{width : '100%', height : '80px'}}/>\r\n         </div>\r\n         <div className=\"mt-2\">{country.country}</div>\r\n         <div className=\"mt-2\"><b>Cases</b> : <b className=\"text-warning\">{numeral(country.cases).format(\"0,0\")}</b></div>\r\n         <div className=\"mt-2\"><b>Recovered</b> : <b className=\"text-success\">{numeral(country.recovered).format(\"0,0\")}</b></div>\r\n         <div className=\"mt-2\"><b>Deaths</b> : <b className=\"text-danger\">{numeral(country.deaths).format(\"0,0\")}</b></div>\r\n        </div>\r\n      </Popup>\r\n\r\n        </Circle>\r\n    ))\r\n);","import React from 'react';\r\nimport { MapContainer as LeafletMap, TileLayer, useMap } from 'react-leaflet';\r\nimport './Map.css';\r\nimport { showDataOnMap } from './utils';\r\n\r\nfunction Map({countries, casesType, center, zoom}) {\r\n    console.log(center, zoom)\r\n    \r\n    function MyComponent() {\r\n        const map = useMap()\r\n        map.setView(center, zoom);\r\n        return null\r\n      }\r\n      \r\n    return (\r\n        <div className=\"shadow map\" style={{height : '600px'}}>\r\n       \r\n            <LeafletMap center={center} zoom={zoom}>\r\n                <MyComponent />\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n\r\n                {showDataOnMap(countries, casesType)}\r\n            </LeafletMap>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","import React from 'react';\r\nimport './Table.css';\r\nimport numeral from 'numeral';\r\n\r\n \r\nfunction Table({countries}) {\r\n    return (\r\n        <div className=\"shadow rounded p-3 mt-5\" style={{height : '90vh', overflow : 'scroll'}}>\r\n            <h5 className=\"mb-4 text-center\">Live cases by country</h5>\r\n            {countries?.map(({country, cases}, index) => (\r\n                <tr>\r\n                    <td className={index%2 == 0 ? \"table-bg-even p-2 rounded\" : \"bg-light p-2 rounded\"}>{country}</td>\r\n                    <td className={index%2 == 0 ? \"table-bg-even p-2 rounded\" : \"bg-light p-2 rounded\"}><b>{numeral(cases).format(\"0,0\")}</b></td>\r\n                </tr>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          return numeral(tooltipItem.value).format(\"+0,0\");\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          time: {\r\n            format: \"MM/DD/YY\",\r\n            tooltipFormat: \"ll\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            // Include a dollar sign in the ticks\r\n            callback: function (value, index, values) {\r\n              return numeral(value).format(\"0a\");\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\nfunction LineGraph({ casesType = 'cases'}) {\r\n    const [data, setData] = useState({});\r\n\r\n    const buildChardData = (data, casesType = 'cases') => {\r\n        const chartData = [];\r\n        let lastDataPoint;\r\n\r\n        for(let date in data.cases) {\r\n            if (lastDataPoint) {\r\n                const newDataPoint = {\r\n                    x : date,\r\n                    y : data[casesType][date] - lastDataPoint \r\n\r\n                }\r\n                chartData.push(newDataPoint);\r\n            }\r\n\r\n            lastDataPoint = data[casesType][date];\r\n        }\r\n\r\n        return chartData;\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n        .then(res=>{\r\n            console.log(\"Chart : \",res.data);\r\n            const chartData = buildChardData(res.data);\r\n            setData(chartData);\r\n        })\r\n    }, [casesType]);\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"mt-3\" style={{height : '300px'}}>\r\n          <h5 className=\"mb-3 text-center\">Cases worldwide </h5>\r\n          \r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n            \r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n// import '../node_modules/jquery/dist/jquery.slim';\n// import '../node_modules/popper.js/dist/popper';\n// import '../node_modules/bootstrap/js/dist/dropdown.js';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport { sortData } from './utils';\nimport LineGraph from './LineGraph';\nimport 'leaflet/dist/leaflet.css';\n\n\nfunction App() {\n  const [selectedCountry, setSelectedCountry] = useState('World Wide');\n  const [countries, setCountries] = useState([]);\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState([34.80746, -40.4796 ]);\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  // https://disease.sh/v3/covid-19/countries\n\n  useEffect(() => {\n    axios.get('https://disease.sh/v3/covid-19/countries')\n      .then(res => {\n        setCountries(res.data.map(item => ({\n          name: item.country,\n          value: item.countryInfo.iso3\n        })\n        ))\n        const sortedCountriesByCases = sortData(res.data);\n        setTableData(sortedCountriesByCases);\n        setMapCountries(res.data);\n      })\n      .catch(error => alert(error.message))\n\n\n    axios.get('https://disease.sh/v3/covid-19/all') //get the data for all the country on page load\n    .then(res => {\n      \n      setCountryInfo(res.data);\n      console.log(\"DATA --> \", res);\n    })\n    .catch(error => alert(error.message))\n  }, [])\n\n  const onCountryChange = (event, country) => {\n    console.log(country);\n    \n    let url = \"\";\n    if (country === 'worldwide'){\n      setSelectedCountry(\"World Wide\");\n      url = 'https://disease.sh/v3/covid-19/all';\n    }\n    else{\n      setSelectedCountry(country.name);\n      url = `https://disease.sh/v3/covid-19/countries/${country.name}`;\n    }\n\n    console.log(url);\n\n    axios.get(url)\n    .then(res => {\n      setCountryInfo(res.data);\n      setMapZoom(4);\n\n      if(res.data.countryInfo)  setMapCenter([res.data.countryInfo.lat, res.data.countryInfo.long]);\n\n      else  {\n        setMapZoom(3);\n        setMapCenter([34.80746, -40.4796 ]);\n      }\n      console.log(\"DATA --> \", res);\n    })\n    .catch(error => alert(error.message))\n\n    \n    \n\n    \n  }\n\n  return (\n    <>\n      <nav class=\"navbar fixed-top navbar-light navbar-expand-lg navbar-light shadow\">\n        <h4 class=\"navbar-brand nav-text text-light text-center m-auto\" >Covid-19 Tracker</h4>\n      </nav>\n    <div className=\"App container-fluid\">\n      \n      <div className=\"row mt-4\">\n\n        <div className=\"col-12 col-md-8\">\n        \n          <div className=\"row\">\n            <div className=\"col-12 col-sm-8\">\n              <h5 className=\"d-none d-sm-block\">Click on the map circles to see data for respective country</h5>\n            </div>\n            <div className=\"col-12 col-sm-4 text-center\">\n              <div className=\"dropdown\">\n                <button className=\"btn btn-info dropdown-toggle shadow\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                  {selectedCountry} </button>\n                <div className=\"dropdown-menu\" style={{ maxHeight: '400px', overflowY: 'scroll' }}>\n                <span onClick={e => onCountryChange(e, \"worldwide\")} type='button' className=\"dropdown-item\" >World Wide </span>\n                  {\n                    countries.map(country => (\n                      <span onClick={e => onCountryChange(e, country)} type='button' className=\"dropdown-item\" >{country.name} </span>\n                    ))\n                  }\n\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Info Boxes */}\n          <div className=\"row mt-3\">\n            <div className=\"col-12 col-md-4\">\n              <InfoBox title=\"Coronavirus Cases\" cases={countryInfo?.todayCases} total={countryInfo?.cases}/>\n            </div>\n            <div className=\"col-12 col-md-4\">\n              <InfoBox title=\"Recovered\" cases={countryInfo?.todayRecovered} total={countryInfo?.recovered}/>\n            </div>\n            <div className=\"col-12 col-md-4\">\n              <InfoBox title=\"Deaths\" cases={countryInfo?.todayDeaths} total={countryInfo?.deaths}/>\n            </div>\n          </div>\n\n          {/* MAP */}\n          <div className=\"row mt-4\">\n            <div className=\"col-12\">\n              \n              <Map\n              countries={mapCountries}\n              center={mapCenter} zoom={mapZoom}/>\n            </div>\n          </div>\n\n\n        </div>\n\n        <div className=\"col-12 col-md-4\">\n          <LineGraph /> \n          <Table countries={tableData}/>\n          \n        </div>\n      </div>\n\n\n        \n    </div>\n    <footer className=\"bg-light shadow mt-3 text-center\">Developed By Ritesh Gupta</footer>   \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}